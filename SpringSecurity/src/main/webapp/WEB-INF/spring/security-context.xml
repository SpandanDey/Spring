<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- Enables and scan annotation beans, replaces XML config -->
	<context:component-scan base-package="br.josue.custom" />

	<!-- Declares the we are using annotations / XML mixed, helps to spring 
		find the annotated beans, always use when mixed config -->
	<context:annotation-config />


	<!-- REST requests -->
	<http request-matcher-ref="basicAuthRequestMatcher"><!-- our custom requestMatcher -->
		<intercept-url pattern="/secured" access="ROLE_USER" />
		<http-basic />
	</http>

	<!-- Standard requests, logged in from Form -->
	<http auto-config="true">
		<form-login/>
	</http>


	<!-- <debug /> -->

	<authentication-manager>
		<!-- Simple authentication provicer -->
		<!-- <authentication-provider> -->
		<!-- <user-service> -->
		<!-- <user name="1" password="1" authorities="ROLE_USER" /> -->
		<!-- </user-service> -->
		<!-- </authentication-provider> -->

		<!-- Custom authentication provider -->
		<!-- customAuthenticationProvider is defined by @Component on br.josue.custom.auth -->
		<!-- can be used direct user-service-ref and remove the custom auth provider -->
		<authentication-provider ref="customRestAuthenticationProvider" />
	</authentication-manager>

	<!-- Password hash ref: http://springinpractice.com/2008/10/11/hashing-and-salting-passwords-with-spring-security-2 -->


	<!-- Custom authentication provider bean -->
	<!-- if component scan enabled, this bean declaration should be removed, 
		or it will create two instances of this bean -->
	<!-- <beans:bean id="customAuthenticationProvider" -->
	<!-- class="br.josue.custom.auth.CustomAuthenticationProvider" /> -->
	<!-- <beans:bean id="userService" class="br.josue.custom.auth.UserService" -->
	<!-- /> -->
	<!-- <beans:bean id="userDao" class="br.josue.custom.auth.UserDao" /> -->



</beans:beans>